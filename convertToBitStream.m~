function [stream, breakLength] = convertToBitStream(array_3d,N)
% Takes in a 3D array of an image and then returns the bitstream equivalent
% N is the group size of 8 by 8 blocks
    
    [m, n, numBlocks] = size(array_3d); % Rows, Columns, Number of Blocks
    reshapeSize = n * m * N;
    assert(mod(numBlocks,N)==0);  %make sure we can make N groups of blocks
    streamDummy = reshape(array_3d,[m*n*numBlocks 1]);
    streamDummyBi = de2bi(streamDummy);
    bits = size(streamDummyBi,2);
    stream = reshape(streamDummyBi',[bits*m*n*numBlocks 1]
    
%     j=1;
%     for i=1:N:numBlocks
%        stream{j} = reshape(array_3d(:,:,i:i+N-1), [reshapeSize 1]);
%        stream{j} = de2bi(stream{j});
%        j=j+1;
%     end
    
end